name: 'Deploy'

on:
  workflow_dispatch:
   inputs:
     user_name:
       description: 'Pass your user name'
       type: string
       required: true
     ticket_number:
       description: 'Pass your ticket number'
       type: string
       required: true
     env:
       description: 'Pass your env name'
       type: string
       required: true
permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
#     defaults:
#       run:
#         working-directory: terraform
#         shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: "us-east-1"

     # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

      #Terraform Workspace
    - name: Terraform Workspace
      run: terraform workspace new ${{ inputs.ticket_number }} || terraform workspace select ${{ inputs.ticket_number }}

#    # Checks that all Terraform configuration files adhere to a canonical format
#    - name: Terraform Format
#      run: terraform fmt -check



    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -var instance_type=${{ inputs.instance_type }}  -var key_name=${{ inputs.key_name }} -var user_name=${{ inputs.user_name }} -var ticket_number=${{ inputs.ticket_number }}  -var env=${{ inputs.env }} -input=false -out tfplan

      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      run: terraform apply "tfplan"
 